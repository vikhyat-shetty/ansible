---
- name: Check OS distribution
  ansible.builtin.setup:
    filter: ansible_distribution

- name: Update apt package and Install necessary packages for Debian/Ubuntu
  include_tasks: debian_ubuntu.yml
  when: (ansible_facts['distribution'] == 'Debian' or ansible_facts['distribution'] == 'Ubuntu') and airgapped_installation_mode == "false" 

- name: Update yum package and Install necessary packages for CentOS/RHEL
  include_tasks: centos_redhat.yml
  when: (ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat') and airgapped_installation_mode == "false"

- name: Download Prometheus
  when: airgapped_installation_mode == "false"
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "/tmp/prometheus.tar.gz"

- name: Copy Prometheus package to desination (Air gapped mode)
  when: airgapped_installation_mode == "true"
  ansible.builtin.copy:
    src: "{{ prometheus_package }}"
    dest: /tmp/
  
- name: Rename Grafana tar file to prometheus.tar.gz
  when: airgapped_installation_mode == "true"  
  command: mv prometheus-{{ prometheus_version }}.linux-amd64.tar.gz /tmp/prometheus.tar.gz

- name: Install Prometheus
  become: yes
  become_user: root
  shell: |
    cd /tmp/
    tar xvfz prometheus.tar.gz
    prometheus_dir=$(find . -maxdepth 1 -type d -name "prometheus-*" -exec basename {} \;)
    cd "$prometheus_dir"
    cp prometheus /usr/local/bin/
    cp promtool /usr/local/bin/
    cp -r consoles /etc/prometheus
    cp -r console_libraries /etc/prometheus

- name: Setup Prometheus Service File
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service

- name: Create the prometheus user
  user:
    name: prometheus
    state: present

- name: Create the prometheus group
  group:
    name: prometheus
    state: present

# Checks if the required Prometheus directories exists. Creates if it doesnt and set ownership and permissions

- block:
  - name: "Checking Prometheus folders"
    stat:
      path: "{{item}}"
    register: folder_stats
    with_items:
      - /usr/local/bin/prometheus
      - /usr/local/bin/promtool
      - /etc/prometheus/consoles
      - /etc/prometheus/console_libraries
      - /var/lib/prometheus
  - name: "Creating multiple folders without disturbing previous permissions"
    file:
      path: "{{item.item}}"
      state: directory
      mode: 0755
      group: prometheus
      owner: prometheus
      recurse: yes
    become: yes
    when: item.stat.exists == false
    with_items:
    - "{{folder_stats.results}}"

- name: Delete Prometheus tmp folder
  file:
    path: /tmp/$prometheus_dir
    state: absent

- name: Add scrape_configs to prometheus.yml
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml

- name: Reload systemd daemon
  become: yes
  become_user: root
  shell: systemctl daemon-reload

- name: Start and enable Prometheus service
  systemd:
    name: prometheus
    state: restarted
    enabled: yes
